package collectionsPractice;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;

public class OverallConcept {

	public static void main(String[] args) {
		test();

	}
	
	private static void test() {
		List<Integer> l1 = new ArrayList<>();
		l1.add(1);
		l1.add(2);
		l1.add(3);
		l1.add(1);
		System.out.println("l1: "+ l1); //order preserved and duplicates allowed.
		
		List<Integer> l2 = new LinkedList<>();
		l2.add(1);
		l2.add(2);
		l2.add(3);
		l2.add(1);
		System.out.println("l2: "+ l2); //order preserved and duplicates allowed.
		
		Set<Integer> s1 = new HashSet<>();
		s1.add(1);
		s1.add(7);
		s1.add(3);
		s1.add(1);
		s1.add(9);
		System.out.println("s1:"+s1); //order not preserved and duplicates not allowed.
		
		Set<Integer> s2 = new LinkedHashSet<>();
		s2.add(1);
		s2.add(7);
		s2.add(3);
		s2.add(1);
		s2.add(9);
		System.out.println("s2:"+s2); //order preserved and duplicates not allowed.
		
		Set<Integer> s3 = new TreeSet<>();
		s3.add(1);
		s3.add(7);
		s3.add(3);
		s3.add(1);
		s3.add(9);
		System.out.println("s3:"+s3); //elements sorted and duplicates not allowed.
		
		//finally in the set duplicates not allowed.
		//Hashset: no order
		//linkedHashSet: have order
		//treeset: sort elements.
		
		
	}

}
